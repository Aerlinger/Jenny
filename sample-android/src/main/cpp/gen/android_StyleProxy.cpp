/**
 * File generated by Jenny -- https://github.com/LanderlYoung/Jenny
 *
 * DO NOT EDIT THIS FILE.
 *
 * For bug report, please refer to github issue tracker https://github.com/LanderlYoung/Jenny/issues.
 */
#include "android_StyleProxy.h"


// external logger function passed by jenny.errorLoggerFunction
void jennySampleErrorLog(JNIEnv* env, const char* error);


namespace android {

jclass StyleProxy::sClazz = nullptr;

// thread safe init
std::mutex StyleProxy::sInitLock;
std::atomic_bool StyleProxy::sInited;

/*static*/ bool StyleProxy::initClazz(JNIEnv* env) {
#define JENNY_CHECK_NULL(val)                      \
       do {                                        \
           if ((val) == nullptr) {                 \
               jennySampleErrorLog(env, "can't init StyleProxy::" #val); \
               return false;                       \
           }                                       \
       } while(false)

    if (!sInited) {
        std::lock_guard<std::mutex> lg(sInitLock);
        if (!sInited) {
            auto clazz = env->FindClass(FULL_CLASS_NAME);
            JENNY_CHECK_NULL(clazz);
            sClazz = reinterpret_cast<jclass>(env->NewGlobalRef(clazz));
            env->DeleteLocalRef(clazz);
            JENNY_CHECK_NULL(sClazz);


            sMethod_values_0 = env->GetStaticMethodID(sClazz, "values", "()[Landroid/graphics/Paint$Style;");
            JENNY_CHECK_NULL(sMethod_values_0);

            sMethod_valueOf_0 = env->GetStaticMethodID(sClazz, "valueOf", "(Ljava/lang/String;)Landroid/graphics/Paint$Style;");
            JENNY_CHECK_NULL(sMethod_valueOf_0);


            sField_FILL_0 = env->GetStaticFieldID(sClazz, "FILL", "Landroid/graphics/Paint$Style;");
            JENNY_CHECK_NULL(sField_FILL_0);

            sField_STROKE_1 = env->GetStaticFieldID(sClazz, "STROKE", "Landroid/graphics/Paint$Style;");
            JENNY_CHECK_NULL(sField_STROKE_1);

            sField_FILL_AND_STROKE_2 = env->GetStaticFieldID(sClazz, "FILL_AND_STROKE", "Landroid/graphics/Paint$Style;");
            JENNY_CHECK_NULL(sField_FILL_AND_STROKE_2);


            sInited = true;
        }
    }
#undef JENNY_CHECK_NULL
   return true;
}

/*static*/ void StyleProxy::releaseClazz(JNIEnv* env) {
    if (sInited) {
        std::lock_guard<std::mutex> lg(sInitLock);
        if (sInited) {
            env->DeleteGlobalRef(sClazz);
            sClazz = nullptr;
            sInited = false;
        }
    }
}


jmethodID StyleProxy::sMethod_values_0;
jmethodID StyleProxy::sMethod_valueOf_0;

jfieldID StyleProxy::sField_FILL_0;
jfieldID StyleProxy::sField_STROKE_1;
jfieldID StyleProxy::sField_FILL_AND_STROKE_2;

} // endof namespace android
