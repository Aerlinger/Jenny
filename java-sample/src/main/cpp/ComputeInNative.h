/**
 * File generated by Jenny -- https://github.com/LanderlYoung/Jenny
 *
 * DO NOT EDIT THIS FILE WITHOUT COPYING TO YOUR SRC DIRECTORY.
 *
 * For bug report, please refer to github issue tracker https://github.com/LanderlYoung/Jenny/issues,
 * or contact author landerlyoung@gmail.com.
 */

/* C++ header file for class com.young.jennysampleapp.ComputeIntensiveClass */
#pragma once

#include <jni.h>

namespace  ComputeInNative {

//DO NOT modify
static constexpr auto FULL_CLASS_NAME = "io/github/landerlyoung/jennysample/ComputeInNative";



/*
 * Class:     io_github_landerlyoung_jennysample_ComputeInNative
 * Method:    public boolean init()
 * Signature: ()Z
 */
jboolean init(JNIEnv *env, jobject thiz);


/*
 * Class:     io_github_landerlyoung_jennysample_ComputeInNative
 * Method:    public void release()
 * Signature: ()V
 */
void release(JNIEnv *env, jobject thiz);


/*
 * Class:     io_github_landerlyoung_jennysample_ComputeInNative
 * Method:    public void setParam(java.util.Map<java.lang.String,java.lang.String> globalHttpParam)
 * Signature: (Ljava/util/Map;)V
 */
void setParam(JNIEnv *env, jobject thiz, jobject globalHttpParam);


/*
 * Class:     io_github_landerlyoung_jennysample_ComputeInNative
 * Method:    public java.util.Map<java.lang.String,java.lang.String> getGlobalParam()
 * Signature: ()Ljava/util/Map;
 */
jobject getGlobalParam(JNIEnv *env, jobject thiz);


/*
 * Class:     io_github_landerlyoung_jennysample_ComputeInNative
 * Method:    public boolean request(java.lang.String json, io.github.landerlyoung.jennysample.RequestListener listener)
 * Signature: (Ljava/lang/String;Lio/github/landerlyoung/jennysample/RequestListener;)Z
 */
jboolean request(JNIEnv *env, jobject thiz, jstring json, jobject listener);




/**
 * register Native functions
 * @returns success or not
 */
bool registerNativeFunctions(JNIEnv *env);

} //endof namespace ComputeInNative
