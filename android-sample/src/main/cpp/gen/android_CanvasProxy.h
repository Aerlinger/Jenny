/**
 * File generated by Jenny -- https://github.com/LanderlYoung/Jenny
 *
 * DO NOT EDIT THIS FILE.
 *
 * For bug report, please refer to github issue tracker https://github.com/LanderlYoung/Jenny/issues,
 * or contact author landerlyoung@gmail.com.
 */
#pragma once

#include <jni.h>
#include <assert.h>                        
#include <atomic>
#include <mutex>

namespace android {
class CanvasProxy {

public:
    static constexpr auto FULL_CLASS_NAME = "android/graphics/Canvas";

    static constexpr jint ALL_SAVE_FLAG = 31;


private:
    // thread safe init
    static std::atomic_bool sInited;
    static std::mutex sInitLock;

    JNIEnv* mJniEnv;
    jobject mJavaObjectReference;

public:

    static bool initClazz(JNIEnv *env);
    
    static void releaseClazz(JNIEnv *env);

    static void assertInited(JNIEnv *env) {
        assert(initClazz(env));
    }

    CanvasProxy(JNIEnv *env, jobject javaObj)
            : mJniEnv(env), mJavaObjectReference(javaObj) {
        assertInited(env);
    }

    CanvasProxy(const CanvasProxy &from) = default;
    CanvasProxy &operator=(const CanvasProxy &) = default;

    CanvasProxy(CanvasProxy &&from)
           : mJniEnv(from.mJniEnv), mJavaObjectReference(from.mJavaObjectReference) {
        from.mJavaObjectReference = nullptr;
    }

    ~CanvasProxy() = default;
    
    // helper method to get underlay jobject reference
    jobject operator*() {
       return mJavaObjectReference;
    }
    
    // helper method to delete JNI local ref.
    // use only when you really understand JNIEnv::DeleteLocalRef.
    void deleteLocalRef() {
       if (mJavaObjectReference) {
           mJniEnv->DeleteLocalRef(mJavaObjectReference);
           mJavaObjectReference = nullptr;
       }
    }
    
    // === java methods below ===
    
    // construct: public Canvas()
    static CanvasProxy newInstance(JNIEnv* env) noexcept {
       assertInited(env);
       return CanvasProxy(env, env->NewObject(sClazz, sConstruct_0));
    } 
    
    // construct: public Canvas(android.graphics.Bitmap bitmap)
    static CanvasProxy newInstance(JNIEnv* env, jobject bitmap) noexcept {
       assertInited(env);
       return CanvasProxy(env, env->NewObject(sClazz, sConstruct_1, bitmap));
    } 
    

    // method: public boolean isHardwareAccelerated()
    jboolean isHardwareAccelerated() const {
        return mJniEnv->CallBooleanMethod(mJavaObjectReference, sMethod_isHardwareAccelerated_0);
    }

    // method: public void setBitmap(android.graphics.Bitmap bitmap)
    void setBitmap(jobject bitmap) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_setBitmap_0, bitmap);
    }

    // method: public boolean isOpaque()
    jboolean isOpaque() const {
        return mJniEnv->CallBooleanMethod(mJavaObjectReference, sMethod_isOpaque_0);
    }

    // method: public int getWidth()
    jint getWidth() const {
        return mJniEnv->CallIntMethod(mJavaObjectReference, sMethod_getWidth_0);
    }

    // method: public int getHeight()
    jint getHeight() const {
        return mJniEnv->CallIntMethod(mJavaObjectReference, sMethod_getHeight_0);
    }

    // method: public int getDensity()
    jint getDensity() const {
        return mJniEnv->CallIntMethod(mJavaObjectReference, sMethod_getDensity_0);
    }

    // method: public void setDensity(int density)
    void setDensity(jint density) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_setDensity_0, density);
    }

    // method: public int getMaximumBitmapWidth()
    jint getMaximumBitmapWidth() const {
        return mJniEnv->CallIntMethod(mJavaObjectReference, sMethod_getMaximumBitmapWidth_0);
    }

    // method: public int getMaximumBitmapHeight()
    jint getMaximumBitmapHeight() const {
        return mJniEnv->CallIntMethod(mJavaObjectReference, sMethod_getMaximumBitmapHeight_0);
    }

    // method: public int save()
    jint save() const {
        return mJniEnv->CallIntMethod(mJavaObjectReference, sMethod_save_0);
    }

    // method: public int saveLayer(android.graphics.RectF bounds, android.graphics.Paint paint, int saveFlags)
    jint saveLayer(jobject bounds, jobject paint, jint saveFlags) const {
        return mJniEnv->CallIntMethod(mJavaObjectReference, sMethod_saveLayer_0, bounds, paint, saveFlags);
    }

    // method: public int saveLayer(android.graphics.RectF bounds, android.graphics.Paint paint)
    jint saveLayer(jobject bounds, jobject paint) const {
        return mJniEnv->CallIntMethod(mJavaObjectReference, sMethod_saveLayer_1, bounds, paint);
    }

    // method: public int saveLayer(float left, float top, float right, float bottom, android.graphics.Paint paint, int saveFlags)
    jint saveLayer(jfloat left, jfloat top, jfloat right, jfloat bottom, jobject paint, jint saveFlags) const {
        return mJniEnv->CallIntMethod(mJavaObjectReference, sMethod_saveLayer_2, left, top, right, bottom, paint, saveFlags);
    }

    // method: public int saveLayer(float left, float top, float right, float bottom, android.graphics.Paint paint)
    jint saveLayer(jfloat left, jfloat top, jfloat right, jfloat bottom, jobject paint) const {
        return mJniEnv->CallIntMethod(mJavaObjectReference, sMethod_saveLayer_3, left, top, right, bottom, paint);
    }

    // method: public int saveLayerAlpha(android.graphics.RectF bounds, int alpha, int saveFlags)
    jint saveLayerAlpha(jobject bounds, jint alpha, jint saveFlags) const {
        return mJniEnv->CallIntMethod(mJavaObjectReference, sMethod_saveLayerAlpha_0, bounds, alpha, saveFlags);
    }

    // method: public int saveLayerAlpha(android.graphics.RectF bounds, int alpha)
    jint saveLayerAlpha(jobject bounds, jint alpha) const {
        return mJniEnv->CallIntMethod(mJavaObjectReference, sMethod_saveLayerAlpha_1, bounds, alpha);
    }

    // method: public int saveLayerAlpha(float left, float top, float right, float bottom, int alpha, int saveFlags)
    jint saveLayerAlpha(jfloat left, jfloat top, jfloat right, jfloat bottom, jint alpha, jint saveFlags) const {
        return mJniEnv->CallIntMethod(mJavaObjectReference, sMethod_saveLayerAlpha_2, left, top, right, bottom, alpha, saveFlags);
    }

    // method: public int saveLayerAlpha(float left, float top, float right, float bottom, int alpha)
    jint saveLayerAlpha(jfloat left, jfloat top, jfloat right, jfloat bottom, jint alpha) const {
        return mJniEnv->CallIntMethod(mJavaObjectReference, sMethod_saveLayerAlpha_3, left, top, right, bottom, alpha);
    }

    // method: public void restore()
    void restore() const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_restore_0);
    }

    // method: public int getSaveCount()
    jint getSaveCount() const {
        return mJniEnv->CallIntMethod(mJavaObjectReference, sMethod_getSaveCount_0);
    }

    // method: public void restoreToCount(int saveCount)
    void restoreToCount(jint saveCount) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_restoreToCount_0, saveCount);
    }

    // method: public void translate(float dx, float dy)
    void translate(jfloat dx, jfloat dy) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_translate_0, dx, dy);
    }

    // method: public void scale(float sx, float sy)
    void scale(jfloat sx, jfloat sy) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_scale_0, sx, sy);
    }

    // method: public final void scale(float sx, float sy, float px, float py)
    void scale(jfloat sx, jfloat sy, jfloat px, jfloat py) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_scale_1, sx, sy, px, py);
    }

    // method: public void rotate(float degrees)
    void rotate(jfloat degrees) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_rotate_0, degrees);
    }

    // method: public final void rotate(float degrees, float px, float py)
    void rotate(jfloat degrees, jfloat px, jfloat py) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_rotate_1, degrees, px, py);
    }

    // method: public void skew(float sx, float sy)
    void skew(jfloat sx, jfloat sy) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_skew_0, sx, sy);
    }

    // method: public void concat(android.graphics.Matrix matrix)
    void concat(jobject matrix) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_concat_0, matrix);
    }

    // method: public void setMatrix(android.graphics.Matrix matrix)
    void setMatrix(jobject matrix) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_setMatrix_0, matrix);
    }

    // method: public void getMatrix(android.graphics.Matrix ctm)
    void getMatrix(jobject ctm) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_getMatrix_0, ctm);
    }

    // method: public final android.graphics.Matrix getMatrix()
    jobject getMatrix() const {
        return mJniEnv->CallObjectMethod(mJavaObjectReference, sMethod_getMatrix_1);
    }

    // method: public boolean clipRect(android.graphics.RectF rect, android.graphics.Region.Op op)
    jboolean clipRect__Landroid_graphics_RectF_2Landroid_graphics_Region_Op_2(jobject rect, jobject op) const {
        return mJniEnv->CallBooleanMethod(mJavaObjectReference, sMethod_clipRect_0, rect, op);
    }

    // method: public boolean clipRect(android.graphics.Rect rect, android.graphics.Region.Op op)
    jboolean clipRect__Landroid_graphics_Rect_2Landroid_graphics_Region_Op_2(jobject rect, jobject op) const {
        return mJniEnv->CallBooleanMethod(mJavaObjectReference, sMethod_clipRect_1, rect, op);
    }

    // method: public boolean clipRect(android.graphics.RectF rect)
    jboolean clipRect__Landroid_graphics_RectF_2(jobject rect) const {
        return mJniEnv->CallBooleanMethod(mJavaObjectReference, sMethod_clipRect_2, rect);
    }

    // method: public boolean clipRect(android.graphics.Rect rect)
    jboolean clipRect__Landroid_graphics_Rect_2(jobject rect) const {
        return mJniEnv->CallBooleanMethod(mJavaObjectReference, sMethod_clipRect_3, rect);
    }

    // method: public boolean clipRect(float left, float top, float right, float bottom, android.graphics.Region.Op op)
    jboolean clipRect(jfloat left, jfloat top, jfloat right, jfloat bottom, jobject op) const {
        return mJniEnv->CallBooleanMethod(mJavaObjectReference, sMethod_clipRect_4, left, top, right, bottom, op);
    }

    // method: public boolean clipRect(float left, float top, float right, float bottom)
    jboolean clipRect(jfloat left, jfloat top, jfloat right, jfloat bottom) const {
        return mJniEnv->CallBooleanMethod(mJavaObjectReference, sMethod_clipRect_5, left, top, right, bottom);
    }

    // method: public boolean clipRect(int left, int top, int right, int bottom)
    jboolean clipRect(jint left, jint top, jint right, jint bottom) const {
        return mJniEnv->CallBooleanMethod(mJavaObjectReference, sMethod_clipRect_6, left, top, right, bottom);
    }

    // method: public boolean clipOutRect(android.graphics.RectF rect)
    jboolean clipOutRect__Landroid_graphics_RectF_2(jobject rect) const {
        return mJniEnv->CallBooleanMethod(mJavaObjectReference, sMethod_clipOutRect_0, rect);
    }

    // method: public boolean clipOutRect(android.graphics.Rect rect)
    jboolean clipOutRect__Landroid_graphics_Rect_2(jobject rect) const {
        return mJniEnv->CallBooleanMethod(mJavaObjectReference, sMethod_clipOutRect_1, rect);
    }

    // method: public boolean clipOutRect(float left, float top, float right, float bottom)
    jboolean clipOutRect(jfloat left, jfloat top, jfloat right, jfloat bottom) const {
        return mJniEnv->CallBooleanMethod(mJavaObjectReference, sMethod_clipOutRect_2, left, top, right, bottom);
    }

    // method: public boolean clipOutRect(int left, int top, int right, int bottom)
    jboolean clipOutRect(jint left, jint top, jint right, jint bottom) const {
        return mJniEnv->CallBooleanMethod(mJavaObjectReference, sMethod_clipOutRect_3, left, top, right, bottom);
    }

    // method: public boolean clipPath(android.graphics.Path path, android.graphics.Region.Op op)
    jboolean clipPath(jobject path, jobject op) const {
        return mJniEnv->CallBooleanMethod(mJavaObjectReference, sMethod_clipPath_0, path, op);
    }

    // method: public boolean clipPath(android.graphics.Path path)
    jboolean clipPath(jobject path) const {
        return mJniEnv->CallBooleanMethod(mJavaObjectReference, sMethod_clipPath_1, path);
    }

    // method: public boolean clipOutPath(android.graphics.Path path)
    jboolean clipOutPath(jobject path) const {
        return mJniEnv->CallBooleanMethod(mJavaObjectReference, sMethod_clipOutPath_0, path);
    }

    // method: public android.graphics.DrawFilter getDrawFilter()
    jobject getDrawFilter() const {
        return mJniEnv->CallObjectMethod(mJavaObjectReference, sMethod_getDrawFilter_0);
    }

    // method: public void setDrawFilter(android.graphics.DrawFilter filter)
    void setDrawFilter(jobject filter) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_setDrawFilter_0, filter);
    }

    // method: public boolean quickReject(android.graphics.RectF rect, android.graphics.Canvas.EdgeType type)
    jboolean quickReject__Landroid_graphics_RectF_2Landroid_graphics_Canvas_EdgeType_2(jobject rect, jobject type) const {
        return mJniEnv->CallBooleanMethod(mJavaObjectReference, sMethod_quickReject_0, rect, type);
    }

    // method: public boolean quickReject(android.graphics.Path path, android.graphics.Canvas.EdgeType type)
    jboolean quickReject__Landroid_graphics_Path_2Landroid_graphics_Canvas_EdgeType_2(jobject path, jobject type) const {
        return mJniEnv->CallBooleanMethod(mJavaObjectReference, sMethod_quickReject_1, path, type);
    }

    // method: public boolean quickReject(float left, float top, float right, float bottom, android.graphics.Canvas.EdgeType type)
    jboolean quickReject(jfloat left, jfloat top, jfloat right, jfloat bottom, jobject type) const {
        return mJniEnv->CallBooleanMethod(mJavaObjectReference, sMethod_quickReject_2, left, top, right, bottom, type);
    }

    // method: public boolean getClipBounds(android.graphics.Rect bounds)
    jboolean getClipBounds(jobject bounds) const {
        return mJniEnv->CallBooleanMethod(mJavaObjectReference, sMethod_getClipBounds_0, bounds);
    }

    // method: public final android.graphics.Rect getClipBounds()
    jobject getClipBounds() const {
        return mJniEnv->CallObjectMethod(mJavaObjectReference, sMethod_getClipBounds_1);
    }

    // method: public void drawPicture(android.graphics.Picture picture)
    void drawPicture(jobject picture) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawPicture_0, picture);
    }

    // method: public void drawPicture(android.graphics.Picture picture, android.graphics.RectF dst)
    void drawPicture__Landroid_graphics_Picture_2Landroid_graphics_RectF_2(jobject picture, jobject dst) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawPicture_1, picture, dst);
    }

    // method: public void drawPicture(android.graphics.Picture picture, android.graphics.Rect dst)
    void drawPicture__Landroid_graphics_Picture_2Landroid_graphics_Rect_2(jobject picture, jobject dst) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawPicture_2, picture, dst);
    }

    // method: public void drawArc(android.graphics.RectF oval, float startAngle, float sweepAngle, boolean useCenter, android.graphics.Paint paint)
    void drawArc(jobject oval, jfloat startAngle, jfloat sweepAngle, jboolean useCenter, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawArc_0, oval, startAngle, sweepAngle, useCenter, paint);
    }

    // method: public void drawArc(float left, float top, float right, float bottom, float startAngle, float sweepAngle, boolean useCenter, android.graphics.Paint paint)
    void drawArc(jfloat left, jfloat top, jfloat right, jfloat bottom, jfloat startAngle, jfloat sweepAngle, jboolean useCenter, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawArc_1, left, top, right, bottom, startAngle, sweepAngle, useCenter, paint);
    }

    // method: public void drawARGB(int a, int r, int g, int b)
    void drawARGB(jint a, jint r, jint g, jint b) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawARGB_0, a, r, g, b);
    }

    // method: public void drawBitmap(android.graphics.Bitmap bitmap, float left, float top, android.graphics.Paint paint)
    void drawBitmap(jobject bitmap, jfloat left, jfloat top, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawBitmap_0, bitmap, left, top, paint);
    }

    // method: public void drawBitmap(android.graphics.Bitmap bitmap, android.graphics.Rect src, android.graphics.RectF dst, android.graphics.Paint paint)
    void drawBitmap__Landroid_graphics_Bitmap_2Landroid_graphics_Rect_2Landroid_graphics_RectF_2Landroid_graphics_Paint_2(jobject bitmap, jobject src, jobject dst, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawBitmap_1, bitmap, src, dst, paint);
    }

    // method: public void drawBitmap(android.graphics.Bitmap bitmap, android.graphics.Rect src, android.graphics.Rect dst, android.graphics.Paint paint)
    void drawBitmap__Landroid_graphics_Bitmap_2Landroid_graphics_Rect_2Landroid_graphics_Rect_2Landroid_graphics_Paint_2(jobject bitmap, jobject src, jobject dst, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawBitmap_2, bitmap, src, dst, paint);
    }

    // method: public void drawBitmap(int[] colors, int offset, int stride, float x, float y, int width, int height, boolean hasAlpha, android.graphics.Paint paint)
    void drawBitmap(jintArray colors, jint offset, jint stride, jfloat x, jfloat y, jint width, jint height, jboolean hasAlpha, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawBitmap_3, colors, offset, stride, x, y, width, height, hasAlpha, paint);
    }

    // method: public void drawBitmap(int[] colors, int offset, int stride, int x, int y, int width, int height, boolean hasAlpha, android.graphics.Paint paint)
    void drawBitmap(jintArray colors, jint offset, jint stride, jint x, jint y, jint width, jint height, jboolean hasAlpha, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawBitmap_4, colors, offset, stride, x, y, width, height, hasAlpha, paint);
    }

    // method: public void drawBitmap(android.graphics.Bitmap bitmap, android.graphics.Matrix matrix, android.graphics.Paint paint)
    void drawBitmap(jobject bitmap, jobject matrix, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawBitmap_5, bitmap, matrix, paint);
    }

    // method: public void drawBitmapMesh(android.graphics.Bitmap bitmap, int meshWidth, int meshHeight, float[] verts, int vertOffset, int[] colors, int colorOffset, android.graphics.Paint paint)
    void drawBitmapMesh(jobject bitmap, jint meshWidth, jint meshHeight, jfloatArray verts, jint vertOffset, jintArray colors, jint colorOffset, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawBitmapMesh_0, bitmap, meshWidth, meshHeight, verts, vertOffset, colors, colorOffset, paint);
    }

    // method: public void drawCircle(float cx, float cy, float radius, android.graphics.Paint paint)
    void drawCircle(jfloat cx, jfloat cy, jfloat radius, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawCircle_0, cx, cy, radius, paint);
    }

    // method: public void drawColor(int color)
    void drawColor(jint color) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawColor_0, color);
    }

    // method: public void drawColor(int color, android.graphics.PorterDuff.Mode mode)
    void drawColor(jint color, jobject mode) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawColor_1, color, mode);
    }

    // method: public void drawLine(float startX, float startY, float stopX, float stopY, android.graphics.Paint paint)
    void drawLine(jfloat startX, jfloat startY, jfloat stopX, jfloat stopY, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawLine_0, startX, startY, stopX, stopY, paint);
    }

    // method: public void drawLines(float[] pts, int offset, int count, android.graphics.Paint paint)
    void drawLines(jfloatArray pts, jint offset, jint count, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawLines_0, pts, offset, count, paint);
    }

    // method: public void drawLines(float[] pts, android.graphics.Paint paint)
    void drawLines(jfloatArray pts, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawLines_1, pts, paint);
    }

    // method: public void drawOval(android.graphics.RectF oval, android.graphics.Paint paint)
    void drawOval(jobject oval, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawOval_0, oval, paint);
    }

    // method: public void drawOval(float left, float top, float right, float bottom, android.graphics.Paint paint)
    void drawOval(jfloat left, jfloat top, jfloat right, jfloat bottom, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawOval_1, left, top, right, bottom, paint);
    }

    // method: public void drawPaint(android.graphics.Paint paint)
    void drawPaint(jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawPaint_0, paint);
    }

    // method: public void drawPath(android.graphics.Path path, android.graphics.Paint paint)
    void drawPath(jobject path, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawPath_0, path, paint);
    }

    // method: public void drawPoint(float x, float y, android.graphics.Paint paint)
    void drawPoint(jfloat x, jfloat y, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawPoint_0, x, y, paint);
    }

    // method: public void drawPoints(float[] pts, int offset, int count, android.graphics.Paint paint)
    void drawPoints(jfloatArray pts, jint offset, jint count, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawPoints_0, pts, offset, count, paint);
    }

    // method: public void drawPoints(float[] pts, android.graphics.Paint paint)
    void drawPoints(jfloatArray pts, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawPoints_1, pts, paint);
    }

    // method: public void drawPosText(char[] text, int index, int count, float[] pos, android.graphics.Paint paint)
    void drawPosText(jcharArray text, jint index, jint count, jfloatArray pos, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawPosText_0, text, index, count, pos, paint);
    }

    // method: public void drawPosText(java.lang.String text, float[] pos, android.graphics.Paint paint)
    void drawPosText(jstring text, jfloatArray pos, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawPosText_1, text, pos, paint);
    }

    // method: public void drawRect(android.graphics.RectF rect, android.graphics.Paint paint)
    void drawRect__Landroid_graphics_RectF_2Landroid_graphics_Paint_2(jobject rect, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawRect_0, rect, paint);
    }

    // method: public void drawRect(android.graphics.Rect r, android.graphics.Paint paint)
    void drawRect__Landroid_graphics_Rect_2Landroid_graphics_Paint_2(jobject r, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawRect_1, r, paint);
    }

    // method: public void drawRect(float left, float top, float right, float bottom, android.graphics.Paint paint)
    void drawRect(jfloat left, jfloat top, jfloat right, jfloat bottom, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawRect_2, left, top, right, bottom, paint);
    }

    // method: public void drawRGB(int r, int g, int b)
    void drawRGB(jint r, jint g, jint b) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawRGB_0, r, g, b);
    }

    // method: public void drawRoundRect(android.graphics.RectF rect, float rx, float ry, android.graphics.Paint paint)
    void drawRoundRect(jobject rect, jfloat rx, jfloat ry, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawRoundRect_0, rect, rx, ry, paint);
    }

    // method: public void drawRoundRect(float left, float top, float right, float bottom, float rx, float ry, android.graphics.Paint paint)
    void drawRoundRect(jfloat left, jfloat top, jfloat right, jfloat bottom, jfloat rx, jfloat ry, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawRoundRect_1, left, top, right, bottom, rx, ry, paint);
    }

    // method: public void drawText(char[] text, int index, int count, float x, float y, android.graphics.Paint paint)
    void drawText(jcharArray text, jint index, jint count, jfloat x, jfloat y, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawText_0, text, index, count, x, y, paint);
    }

    // method: public void drawText(java.lang.String text, float x, float y, android.graphics.Paint paint)
    void drawText(jstring text, jfloat x, jfloat y, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawText_1, text, x, y, paint);
    }

    // method: public void drawText(java.lang.String text, int start, int end, float x, float y, android.graphics.Paint paint)
    void drawText(jstring text, jint start, jint end, jfloat x, jfloat y, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawText_2, text, start, end, x, y, paint);
    }

    // method: public void drawText(java.lang.CharSequence text, int start, int end, float x, float y, android.graphics.Paint paint)
    void drawText(jobject text, jint start, jint end, jfloat x, jfloat y, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawText_3, text, start, end, x, y, paint);
    }

    // method: public void drawTextOnPath(char[] text, int index, int count, android.graphics.Path path, float hOffset, float vOffset, android.graphics.Paint paint)
    void drawTextOnPath(jcharArray text, jint index, jint count, jobject path, jfloat hOffset, jfloat vOffset, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawTextOnPath_0, text, index, count, path, hOffset, vOffset, paint);
    }

    // method: public void drawTextOnPath(java.lang.String text, android.graphics.Path path, float hOffset, float vOffset, android.graphics.Paint paint)
    void drawTextOnPath(jstring text, jobject path, jfloat hOffset, jfloat vOffset, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawTextOnPath_1, text, path, hOffset, vOffset, paint);
    }

    // method: public void drawTextRun(char[] text, int index, int count, int contextIndex, int contextCount, float x, float y, boolean isRtl, android.graphics.Paint paint)
    void drawTextRun(jcharArray text, jint index, jint count, jint contextIndex, jint contextCount, jfloat x, jfloat y, jboolean isRtl, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawTextRun_0, text, index, count, contextIndex, contextCount, x, y, isRtl, paint);
    }

    // method: public void drawTextRun(java.lang.CharSequence text, int start, int end, int contextStart, int contextEnd, float x, float y, boolean isRtl, android.graphics.Paint paint)
    void drawTextRun(jobject text, jint start, jint end, jint contextStart, jint contextEnd, jfloat x, jfloat y, jboolean isRtl, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawTextRun_1, text, start, end, contextStart, contextEnd, x, y, isRtl, paint);
    }

    // method: public void drawVertices(android.graphics.Canvas.VertexMode mode, int vertexCount, float[] verts, int vertOffset, float[] texs, int texOffset, int[] colors, int colorOffset, short[] indices, int indexOffset, int indexCount, android.graphics.Paint paint)
    void drawVertices(jobject mode, jint vertexCount, jfloatArray verts, jint vertOffset, jfloatArray texs, jint texOffset, jintArray colors, jint colorOffset, jshortArray indices, jint indexOffset, jint indexCount, jobject paint) const {
        mJniEnv->CallVoidMethod(mJavaObjectReference, sMethod_drawVertices_0, mode, vertexCount, verts, vertOffset, texs, texOffset, colors, colorOffset, indices, indexOffset, indexCount, paint);
    }



private:
    static jclass sClazz;
    static jmethodID sConstruct_0;
    static jmethodID sConstruct_1;

    static jmethodID sMethod_isHardwareAccelerated_0;
    static jmethodID sMethod_setBitmap_0;
    static jmethodID sMethod_isOpaque_0;
    static jmethodID sMethod_getWidth_0;
    static jmethodID sMethod_getHeight_0;
    static jmethodID sMethod_getDensity_0;
    static jmethodID sMethod_setDensity_0;
    static jmethodID sMethod_getMaximumBitmapWidth_0;
    static jmethodID sMethod_getMaximumBitmapHeight_0;
    static jmethodID sMethod_save_0;
    static jmethodID sMethod_saveLayer_0;
    static jmethodID sMethod_saveLayer_1;
    static jmethodID sMethod_saveLayer_2;
    static jmethodID sMethod_saveLayer_3;
    static jmethodID sMethod_saveLayerAlpha_0;
    static jmethodID sMethod_saveLayerAlpha_1;
    static jmethodID sMethod_saveLayerAlpha_2;
    static jmethodID sMethod_saveLayerAlpha_3;
    static jmethodID sMethod_restore_0;
    static jmethodID sMethod_getSaveCount_0;
    static jmethodID sMethod_restoreToCount_0;
    static jmethodID sMethod_translate_0;
    static jmethodID sMethod_scale_0;
    static jmethodID sMethod_scale_1;
    static jmethodID sMethod_rotate_0;
    static jmethodID sMethod_rotate_1;
    static jmethodID sMethod_skew_0;
    static jmethodID sMethod_concat_0;
    static jmethodID sMethod_setMatrix_0;
    static jmethodID sMethod_getMatrix_0;
    static jmethodID sMethod_getMatrix_1;
    static jmethodID sMethod_clipRect_0;
    static jmethodID sMethod_clipRect_1;
    static jmethodID sMethod_clipRect_2;
    static jmethodID sMethod_clipRect_3;
    static jmethodID sMethod_clipRect_4;
    static jmethodID sMethod_clipRect_5;
    static jmethodID sMethod_clipRect_6;
    static jmethodID sMethod_clipOutRect_0;
    static jmethodID sMethod_clipOutRect_1;
    static jmethodID sMethod_clipOutRect_2;
    static jmethodID sMethod_clipOutRect_3;
    static jmethodID sMethod_clipPath_0;
    static jmethodID sMethod_clipPath_1;
    static jmethodID sMethod_clipOutPath_0;
    static jmethodID sMethod_getDrawFilter_0;
    static jmethodID sMethod_setDrawFilter_0;
    static jmethodID sMethod_quickReject_0;
    static jmethodID sMethod_quickReject_1;
    static jmethodID sMethod_quickReject_2;
    static jmethodID sMethod_getClipBounds_0;
    static jmethodID sMethod_getClipBounds_1;
    static jmethodID sMethod_drawPicture_0;
    static jmethodID sMethod_drawPicture_1;
    static jmethodID sMethod_drawPicture_2;
    static jmethodID sMethod_drawArc_0;
    static jmethodID sMethod_drawArc_1;
    static jmethodID sMethod_drawARGB_0;
    static jmethodID sMethod_drawBitmap_0;
    static jmethodID sMethod_drawBitmap_1;
    static jmethodID sMethod_drawBitmap_2;
    static jmethodID sMethod_drawBitmap_3;
    static jmethodID sMethod_drawBitmap_4;
    static jmethodID sMethod_drawBitmap_5;
    static jmethodID sMethod_drawBitmapMesh_0;
    static jmethodID sMethod_drawCircle_0;
    static jmethodID sMethod_drawColor_0;
    static jmethodID sMethod_drawColor_1;
    static jmethodID sMethod_drawLine_0;
    static jmethodID sMethod_drawLines_0;
    static jmethodID sMethod_drawLines_1;
    static jmethodID sMethod_drawOval_0;
    static jmethodID sMethod_drawOval_1;
    static jmethodID sMethod_drawPaint_0;
    static jmethodID sMethod_drawPath_0;
    static jmethodID sMethod_drawPoint_0;
    static jmethodID sMethod_drawPoints_0;
    static jmethodID sMethod_drawPoints_1;
    static jmethodID sMethod_drawPosText_0;
    static jmethodID sMethod_drawPosText_1;
    static jmethodID sMethod_drawRect_0;
    static jmethodID sMethod_drawRect_1;
    static jmethodID sMethod_drawRect_2;
    static jmethodID sMethod_drawRGB_0;
    static jmethodID sMethod_drawRoundRect_0;
    static jmethodID sMethod_drawRoundRect_1;
    static jmethodID sMethod_drawText_0;
    static jmethodID sMethod_drawText_1;
    static jmethodID sMethod_drawText_2;
    static jmethodID sMethod_drawText_3;
    static jmethodID sMethod_drawTextOnPath_0;
    static jmethodID sMethod_drawTextOnPath_1;
    static jmethodID sMethod_drawTextRun_0;
    static jmethodID sMethod_drawTextRun_1;
    static jmethodID sMethod_drawVertices_0;


};
} // endof namespace android
