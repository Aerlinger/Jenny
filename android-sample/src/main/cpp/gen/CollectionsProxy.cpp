/**
 * File generated by Jenny -- https://github.com/LanderlYoung/Jenny
 *
 * DO NOT EDIT THIS FILE.
 *
 * For bug report, please refer to github issue tracker https://github.com/LanderlYoung/Jenny/issues,
 * or contact author landerlyoung@gmail.com.
 */
#include "CollectionsProxy.h"

jclass CollectionsProxy::sClazz = nullptr;

// thread safe init
std::mutex CollectionsProxy::sInitLock;
std::atomic_bool CollectionsProxy::sInited;

/*static*/ bool CollectionsProxy::initClazz(JNIEnv *env) {
#define JENNY_CHECK_NULL(val)                      \
       do {                                        \
           if ((val) == nullptr) {                 \
               return false;                       \
           }                                       \
       } while(false)

    if (!sInited) {
        std::lock_guard<std::mutex> lg(sInitLock);
        if (!sInited) {
            auto clazz = env->FindClass(FULL_CLASS_NAME);
            JENNY_CHECK_NULL(clazz);
            sClazz = reinterpret_cast<jclass>(env->NewGlobalRef(clazz));
            env->DeleteLocalRef(clazz);
            JENNY_CHECK_NULL(sClazz);
            sConstruct_0 = env->GetMethodID(sClazz, "<init>", "()V");
            JENNY_CHECK_NULL(sConstruct_0);


            sMethod_sort_0 = env->GetStaticMethodID(sClazz, "sort", "(Ljava/util/List;)V");
            JENNY_CHECK_NULL(sMethod_sort_0);

            sMethod_sort_1 = env->GetStaticMethodID(sClazz, "sort", "(Ljava/util/List;Ljava/util/Comparator;)V");
            JENNY_CHECK_NULL(sMethod_sort_1);

            sMethod_binarySearch_0 = env->GetStaticMethodID(sClazz, "binarySearch", "(Ljava/util/List;LT;)I");
            JENNY_CHECK_NULL(sMethod_binarySearch_0);

            sMethod_binarySearch_1 = env->GetStaticMethodID(sClazz, "binarySearch", "(Ljava/util/List;LT;Ljava/util/Comparator;)I");
            JENNY_CHECK_NULL(sMethod_binarySearch_1);

            sMethod_reverse_0 = env->GetStaticMethodID(sClazz, "reverse", "(Ljava/util/List;)V");
            JENNY_CHECK_NULL(sMethod_reverse_0);

            sMethod_shuffle_0 = env->GetStaticMethodID(sClazz, "shuffle", "(Ljava/util/List;)V");
            JENNY_CHECK_NULL(sMethod_shuffle_0);

            sMethod_shuffle_1 = env->GetStaticMethodID(sClazz, "shuffle", "(Ljava/util/List;Ljava/util/Random;)V");
            JENNY_CHECK_NULL(sMethod_shuffle_1);

            sMethod_swap_0 = env->GetStaticMethodID(sClazz, "swap", "(Ljava/util/List;II)V");
            JENNY_CHECK_NULL(sMethod_swap_0);

            sMethod_fill_0 = env->GetStaticMethodID(sClazz, "fill", "(Ljava/util/List;LT;)V");
            JENNY_CHECK_NULL(sMethod_fill_0);

            sMethod_copy_0 = env->GetStaticMethodID(sClazz, "copy", "(Ljava/util/List;Ljava/util/List;)V");
            JENNY_CHECK_NULL(sMethod_copy_0);

            sMethod_min_0 = env->GetStaticMethodID(sClazz, "min", "(Ljava/util/Collection;)LT;");
            JENNY_CHECK_NULL(sMethod_min_0);

            sMethod_min_1 = env->GetStaticMethodID(sClazz, "min", "(Ljava/util/Collection;Ljava/util/Comparator;)LT;");
            JENNY_CHECK_NULL(sMethod_min_1);

            sMethod_max_0 = env->GetStaticMethodID(sClazz, "max", "(Ljava/util/Collection;)LT;");
            JENNY_CHECK_NULL(sMethod_max_0);

            sMethod_max_1 = env->GetStaticMethodID(sClazz, "max", "(Ljava/util/Collection;Ljava/util/Comparator;)LT;");
            JENNY_CHECK_NULL(sMethod_max_1);

            sMethod_rotate_0 = env->GetStaticMethodID(sClazz, "rotate", "(Ljava/util/List;I)V");
            JENNY_CHECK_NULL(sMethod_rotate_0);

            sMethod_replaceAll_0 = env->GetStaticMethodID(sClazz, "replaceAll", "(Ljava/util/List;LT;LT;)Z");
            JENNY_CHECK_NULL(sMethod_replaceAll_0);

            sMethod_indexOfSubList_0 = env->GetStaticMethodID(sClazz, "indexOfSubList", "(Ljava/util/List;Ljava/util/List;)I");
            JENNY_CHECK_NULL(sMethod_indexOfSubList_0);

            sMethod_lastIndexOfSubList_0 = env->GetStaticMethodID(sClazz, "lastIndexOfSubList", "(Ljava/util/List;Ljava/util/List;)I");
            JENNY_CHECK_NULL(sMethod_lastIndexOfSubList_0);

            sMethod_unmodifiableCollection_0 = env->GetStaticMethodID(sClazz, "unmodifiableCollection", "(Ljava/util/Collection;)Ljava/util/Collection;");
            JENNY_CHECK_NULL(sMethod_unmodifiableCollection_0);

            sMethod_unmodifiableSet_0 = env->GetStaticMethodID(sClazz, "unmodifiableSet", "(Ljava/util/Set;)Ljava/util/Set;");
            JENNY_CHECK_NULL(sMethod_unmodifiableSet_0);

            sMethod_unmodifiableSortedSet_0 = env->GetStaticMethodID(sClazz, "unmodifiableSortedSet", "(Ljava/util/SortedSet;)Ljava/util/SortedSet;");
            JENNY_CHECK_NULL(sMethod_unmodifiableSortedSet_0);

            sMethod_unmodifiableNavigableSet_0 = env->GetStaticMethodID(sClazz, "unmodifiableNavigableSet", "(Ljava/util/NavigableSet;)Ljava/util/NavigableSet;");
            JENNY_CHECK_NULL(sMethod_unmodifiableNavigableSet_0);

            sMethod_unmodifiableList_0 = env->GetStaticMethodID(sClazz, "unmodifiableList", "(Ljava/util/List;)Ljava/util/List;");
            JENNY_CHECK_NULL(sMethod_unmodifiableList_0);

            sMethod_unmodifiableMap_0 = env->GetStaticMethodID(sClazz, "unmodifiableMap", "(Ljava/util/Map;)Ljava/util/Map;");
            JENNY_CHECK_NULL(sMethod_unmodifiableMap_0);

            sMethod_unmodifiableSortedMap_0 = env->GetStaticMethodID(sClazz, "unmodifiableSortedMap", "(Ljava/util/SortedMap;)Ljava/util/SortedMap;");
            JENNY_CHECK_NULL(sMethod_unmodifiableSortedMap_0);

            sMethod_unmodifiableNavigableMap_0 = env->GetStaticMethodID(sClazz, "unmodifiableNavigableMap", "(Ljava/util/NavigableMap;)Ljava/util/NavigableMap;");
            JENNY_CHECK_NULL(sMethod_unmodifiableNavigableMap_0);

            sMethod_synchronizedCollection_0 = env->GetStaticMethodID(sClazz, "synchronizedCollection", "(Ljava/util/Collection;)Ljava/util/Collection;");
            JENNY_CHECK_NULL(sMethod_synchronizedCollection_0);

            sMethod_synchronizedSet_0 = env->GetStaticMethodID(sClazz, "synchronizedSet", "(Ljava/util/Set;)Ljava/util/Set;");
            JENNY_CHECK_NULL(sMethod_synchronizedSet_0);

            sMethod_synchronizedSortedSet_0 = env->GetStaticMethodID(sClazz, "synchronizedSortedSet", "(Ljava/util/SortedSet;)Ljava/util/SortedSet;");
            JENNY_CHECK_NULL(sMethod_synchronizedSortedSet_0);

            sMethod_synchronizedNavigableSet_0 = env->GetStaticMethodID(sClazz, "synchronizedNavigableSet", "(Ljava/util/NavigableSet;)Ljava/util/NavigableSet;");
            JENNY_CHECK_NULL(sMethod_synchronizedNavigableSet_0);

            sMethod_synchronizedList_0 = env->GetStaticMethodID(sClazz, "synchronizedList", "(Ljava/util/List;)Ljava/util/List;");
            JENNY_CHECK_NULL(sMethod_synchronizedList_0);

            sMethod_synchronizedMap_0 = env->GetStaticMethodID(sClazz, "synchronizedMap", "(Ljava/util/Map;)Ljava/util/Map;");
            JENNY_CHECK_NULL(sMethod_synchronizedMap_0);

            sMethod_synchronizedSortedMap_0 = env->GetStaticMethodID(sClazz, "synchronizedSortedMap", "(Ljava/util/SortedMap;)Ljava/util/SortedMap;");
            JENNY_CHECK_NULL(sMethod_synchronizedSortedMap_0);

            sMethod_synchronizedNavigableMap_0 = env->GetStaticMethodID(sClazz, "synchronizedNavigableMap", "(Ljava/util/NavigableMap;)Ljava/util/NavigableMap;");
            JENNY_CHECK_NULL(sMethod_synchronizedNavigableMap_0);

            sMethod_checkedCollection_0 = env->GetStaticMethodID(sClazz, "checkedCollection", "(Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/Collection;");
            JENNY_CHECK_NULL(sMethod_checkedCollection_0);

            sMethod_checkedQueue_0 = env->GetStaticMethodID(sClazz, "checkedQueue", "(Ljava/util/Queue;Ljava/lang/Class;)Ljava/util/Queue;");
            JENNY_CHECK_NULL(sMethod_checkedQueue_0);

            sMethod_checkedSet_0 = env->GetStaticMethodID(sClazz, "checkedSet", "(Ljava/util/Set;Ljava/lang/Class;)Ljava/util/Set;");
            JENNY_CHECK_NULL(sMethod_checkedSet_0);

            sMethod_checkedSortedSet_0 = env->GetStaticMethodID(sClazz, "checkedSortedSet", "(Ljava/util/SortedSet;Ljava/lang/Class;)Ljava/util/SortedSet;");
            JENNY_CHECK_NULL(sMethod_checkedSortedSet_0);

            sMethod_checkedNavigableSet_0 = env->GetStaticMethodID(sClazz, "checkedNavigableSet", "(Ljava/util/NavigableSet;Ljava/lang/Class;)Ljava/util/NavigableSet;");
            JENNY_CHECK_NULL(sMethod_checkedNavigableSet_0);

            sMethod_checkedList_0 = env->GetStaticMethodID(sClazz, "checkedList", "(Ljava/util/List;Ljava/lang/Class;)Ljava/util/List;");
            JENNY_CHECK_NULL(sMethod_checkedList_0);

            sMethod_checkedMap_0 = env->GetStaticMethodID(sClazz, "checkedMap", "(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Map;");
            JENNY_CHECK_NULL(sMethod_checkedMap_0);

            sMethod_checkedSortedMap_0 = env->GetStaticMethodID(sClazz, "checkedSortedMap", "(Ljava/util/SortedMap;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/SortedMap;");
            JENNY_CHECK_NULL(sMethod_checkedSortedMap_0);

            sMethod_checkedNavigableMap_0 = env->GetStaticMethodID(sClazz, "checkedNavigableMap", "(Ljava/util/NavigableMap;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/NavigableMap;");
            JENNY_CHECK_NULL(sMethod_checkedNavigableMap_0);

            sMethod_emptyIterator_0 = env->GetStaticMethodID(sClazz, "emptyIterator", "()Ljava/util/Iterator;");
            JENNY_CHECK_NULL(sMethod_emptyIterator_0);

            sMethod_emptyListIterator_0 = env->GetStaticMethodID(sClazz, "emptyListIterator", "()Ljava/util/ListIterator;");
            JENNY_CHECK_NULL(sMethod_emptyListIterator_0);

            sMethod_emptyEnumeration_0 = env->GetStaticMethodID(sClazz, "emptyEnumeration", "()Ljava/util/Enumeration;");
            JENNY_CHECK_NULL(sMethod_emptyEnumeration_0);

            sMethod_emptySet_0 = env->GetStaticMethodID(sClazz, "emptySet", "()Ljava/util/Set;");
            JENNY_CHECK_NULL(sMethod_emptySet_0);

            sMethod_emptySortedSet_0 = env->GetStaticMethodID(sClazz, "emptySortedSet", "()Ljava/util/SortedSet;");
            JENNY_CHECK_NULL(sMethod_emptySortedSet_0);

            sMethod_emptyNavigableSet_0 = env->GetStaticMethodID(sClazz, "emptyNavigableSet", "()Ljava/util/NavigableSet;");
            JENNY_CHECK_NULL(sMethod_emptyNavigableSet_0);

            sMethod_emptyList_0 = env->GetStaticMethodID(sClazz, "emptyList", "()Ljava/util/List;");
            JENNY_CHECK_NULL(sMethod_emptyList_0);

            sMethod_emptyMap_0 = env->GetStaticMethodID(sClazz, "emptyMap", "()Ljava/util/Map;");
            JENNY_CHECK_NULL(sMethod_emptyMap_0);

            sMethod_emptySortedMap_0 = env->GetStaticMethodID(sClazz, "emptySortedMap", "()Ljava/util/SortedMap;");
            JENNY_CHECK_NULL(sMethod_emptySortedMap_0);

            sMethod_emptyNavigableMap_0 = env->GetStaticMethodID(sClazz, "emptyNavigableMap", "()Ljava/util/NavigableMap;");
            JENNY_CHECK_NULL(sMethod_emptyNavigableMap_0);

            sMethod_singleton_0 = env->GetStaticMethodID(sClazz, "singleton", "(LT;)Ljava/util/Set;");
            JENNY_CHECK_NULL(sMethod_singleton_0);

            sMethod_singletonList_0 = env->GetStaticMethodID(sClazz, "singletonList", "(LT;)Ljava/util/List;");
            JENNY_CHECK_NULL(sMethod_singletonList_0);

            sMethod_singletonMap_0 = env->GetStaticMethodID(sClazz, "singletonMap", "(LK;LV;)Ljava/util/Map;");
            JENNY_CHECK_NULL(sMethod_singletonMap_0);

            sMethod_nCopies_0 = env->GetStaticMethodID(sClazz, "nCopies", "(ILT;)Ljava/util/List;");
            JENNY_CHECK_NULL(sMethod_nCopies_0);

            sMethod_reverseOrder_0 = env->GetStaticMethodID(sClazz, "reverseOrder", "()Ljava/util/Comparator;");
            JENNY_CHECK_NULL(sMethod_reverseOrder_0);

            sMethod_reverseOrder_1 = env->GetStaticMethodID(sClazz, "reverseOrder", "(Ljava/util/Comparator;)Ljava/util/Comparator;");
            JENNY_CHECK_NULL(sMethod_reverseOrder_1);

            sMethod_enumeration_0 = env->GetStaticMethodID(sClazz, "enumeration", "(Ljava/util/Collection;)Ljava/util/Enumeration;");
            JENNY_CHECK_NULL(sMethod_enumeration_0);

            sMethod_list_0 = env->GetStaticMethodID(sClazz, "list", "(Ljava/util/Enumeration;)Ljava/util/ArrayList;");
            JENNY_CHECK_NULL(sMethod_list_0);

            sMethod_frequency_0 = env->GetStaticMethodID(sClazz, "frequency", "(Ljava/util/Collection;Ljava/lang/Object;)I");
            JENNY_CHECK_NULL(sMethod_frequency_0);

            sMethod_disjoint_0 = env->GetStaticMethodID(sClazz, "disjoint", "(Ljava/util/Collection;Ljava/util/Collection;)Z");
            JENNY_CHECK_NULL(sMethod_disjoint_0);

            sMethod_addAll_0 = env->GetStaticMethodID(sClazz, "addAll", "(Ljava/util/Collection;[LT;)Z");
            JENNY_CHECK_NULL(sMethod_addAll_0);

            sMethod_newSetFromMap_0 = env->GetStaticMethodID(sClazz, "newSetFromMap", "(Ljava/util/Map;)Ljava/util/Set;");
            JENNY_CHECK_NULL(sMethod_newSetFromMap_0);

            sMethod_asLifoQueue_0 = env->GetStaticMethodID(sClazz, "asLifoQueue", "(Ljava/util/Deque;)Ljava/util/Queue;");
            JENNY_CHECK_NULL(sMethod_asLifoQueue_0);


            sField_EMPTY_LIST_0 = env->GetStaticFieldID(sClazz, "EMPTY_LIST", "Ljava/util/List;");
            JENNY_CHECK_NULL(sField_EMPTY_LIST_0);

            sField_EMPTY_MAP_1 = env->GetStaticFieldID(sClazz, "EMPTY_MAP", "Ljava/util/Map;");
            JENNY_CHECK_NULL(sField_EMPTY_MAP_1);

            sField_EMPTY_SET_2 = env->GetStaticFieldID(sClazz, "EMPTY_SET", "Ljava/util/Set;");
            JENNY_CHECK_NULL(sField_EMPTY_SET_2);


            sInited = true;
        }
    }
#undef JENNY_CHECK_NULL
   return true;
}

/*static*/ void CollectionsProxy::releaseClazz(JNIEnv *env) {
    if (sInited) {
        std::lock_guard<std::mutex> lg(sInitLock);
        if (sInited) {
            env->DeleteLocalRef(sClazz);
            sInited = false;
        }
    }
}

jmethodID CollectionsProxy::sConstruct_0;

jmethodID CollectionsProxy::sMethod_sort_0;
jmethodID CollectionsProxy::sMethod_sort_1;
jmethodID CollectionsProxy::sMethod_binarySearch_0;
jmethodID CollectionsProxy::sMethod_binarySearch_1;
jmethodID CollectionsProxy::sMethod_reverse_0;
jmethodID CollectionsProxy::sMethod_shuffle_0;
jmethodID CollectionsProxy::sMethod_shuffle_1;
jmethodID CollectionsProxy::sMethod_swap_0;
jmethodID CollectionsProxy::sMethod_fill_0;
jmethodID CollectionsProxy::sMethod_copy_0;
jmethodID CollectionsProxy::sMethod_min_0;
jmethodID CollectionsProxy::sMethod_min_1;
jmethodID CollectionsProxy::sMethod_max_0;
jmethodID CollectionsProxy::sMethod_max_1;
jmethodID CollectionsProxy::sMethod_rotate_0;
jmethodID CollectionsProxy::sMethod_replaceAll_0;
jmethodID CollectionsProxy::sMethod_indexOfSubList_0;
jmethodID CollectionsProxy::sMethod_lastIndexOfSubList_0;
jmethodID CollectionsProxy::sMethod_unmodifiableCollection_0;
jmethodID CollectionsProxy::sMethod_unmodifiableSet_0;
jmethodID CollectionsProxy::sMethod_unmodifiableSortedSet_0;
jmethodID CollectionsProxy::sMethod_unmodifiableNavigableSet_0;
jmethodID CollectionsProxy::sMethod_unmodifiableList_0;
jmethodID CollectionsProxy::sMethod_unmodifiableMap_0;
jmethodID CollectionsProxy::sMethod_unmodifiableSortedMap_0;
jmethodID CollectionsProxy::sMethod_unmodifiableNavigableMap_0;
jmethodID CollectionsProxy::sMethod_synchronizedCollection_0;
jmethodID CollectionsProxy::sMethod_synchronizedSet_0;
jmethodID CollectionsProxy::sMethod_synchronizedSortedSet_0;
jmethodID CollectionsProxy::sMethod_synchronizedNavigableSet_0;
jmethodID CollectionsProxy::sMethod_synchronizedList_0;
jmethodID CollectionsProxy::sMethod_synchronizedMap_0;
jmethodID CollectionsProxy::sMethod_synchronizedSortedMap_0;
jmethodID CollectionsProxy::sMethod_synchronizedNavigableMap_0;
jmethodID CollectionsProxy::sMethod_checkedCollection_0;
jmethodID CollectionsProxy::sMethod_checkedQueue_0;
jmethodID CollectionsProxy::sMethod_checkedSet_0;
jmethodID CollectionsProxy::sMethod_checkedSortedSet_0;
jmethodID CollectionsProxy::sMethod_checkedNavigableSet_0;
jmethodID CollectionsProxy::sMethod_checkedList_0;
jmethodID CollectionsProxy::sMethod_checkedMap_0;
jmethodID CollectionsProxy::sMethod_checkedSortedMap_0;
jmethodID CollectionsProxy::sMethod_checkedNavigableMap_0;
jmethodID CollectionsProxy::sMethod_emptyIterator_0;
jmethodID CollectionsProxy::sMethod_emptyListIterator_0;
jmethodID CollectionsProxy::sMethod_emptyEnumeration_0;
jmethodID CollectionsProxy::sMethod_emptySet_0;
jmethodID CollectionsProxy::sMethod_emptySortedSet_0;
jmethodID CollectionsProxy::sMethod_emptyNavigableSet_0;
jmethodID CollectionsProxy::sMethod_emptyList_0;
jmethodID CollectionsProxy::sMethod_emptyMap_0;
jmethodID CollectionsProxy::sMethod_emptySortedMap_0;
jmethodID CollectionsProxy::sMethod_emptyNavigableMap_0;
jmethodID CollectionsProxy::sMethod_singleton_0;
jmethodID CollectionsProxy::sMethod_singletonList_0;
jmethodID CollectionsProxy::sMethod_singletonMap_0;
jmethodID CollectionsProxy::sMethod_nCopies_0;
jmethodID CollectionsProxy::sMethod_reverseOrder_0;
jmethodID CollectionsProxy::sMethod_reverseOrder_1;
jmethodID CollectionsProxy::sMethod_enumeration_0;
jmethodID CollectionsProxy::sMethod_list_0;
jmethodID CollectionsProxy::sMethod_frequency_0;
jmethodID CollectionsProxy::sMethod_disjoint_0;
jmethodID CollectionsProxy::sMethod_addAll_0;
jmethodID CollectionsProxy::sMethod_newSetFromMap_0;
jmethodID CollectionsProxy::sMethod_asLifoQueue_0;

jfieldID CollectionsProxy::sField_EMPTY_LIST_0;
jfieldID CollectionsProxy::sField_EMPTY_MAP_1;
jfieldID CollectionsProxy::sField_EMPTY_SET_2;

